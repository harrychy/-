暴力字符串匹配
var b="ABAAAC";
var c="BAAA";
var N=b.length;
var M=c.length;
function a(b,c){
	for(var i=0;i<N-M;i++){
		var match=true;
		for(var j=0;j<M;j++){
			if(b[i+j]!==c[j]){
				match=false;
				break;}
		}
		if(match){
			console.log(j);
		}
	}
};
时间复杂度为O((N-M)*M)

》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》》

在一个字符串(1<=字符串长度<=10000，全部由字母组成)中找到第一个只出现一次的字符,并返回它的位置。
function FirstNotRepeatingChar(str)
{
    for(var i=0;i<str.length;i++){
        if(str.indexOf(str[i],i+1)===-1&&str.indexOf(str[i])===i){
            return i;
        }
    }
    return -1;	
}

//str.indexOf(str[i],i+1)===-1 判断元素后是否还有相同元素。如果有返回这个元素后第一次出现相同元素的位置。
//str.indexOf(str[i])===i 判断元素前是否有相同元素。如果有返回值为字符串第一次出现此元素的位置。
