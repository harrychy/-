1.数组去重：
（1）hash去重法
    function unique(arr) {
     var result = [], hash = {};
      for (var i = 0, elem; (elem = arr[i]) != null; i++) {
          if (!hash[elem]) {
              result.push(elem);
              hash[elem] = true;
          }
      }
     return result;
    }
（2）遍历
    function myArray_Unique(myArray)
     {
     //var myArray=new Array("a","a","c","a","c","d","e","f","f","g","h","g","h","k");
     var haha=myArray;
     for(var i=0;i<myArray.length;i++)
     {
     for(var j=0;j<myArray.length;j++)
     {
     temp=myArray[i];
     if(temp==myArray[i+j+1]) //如果当前元素与后一个元素相等
     haha.splice(i+j+1,1); //然后就移除下一个元素
     }
     }
     return haha;
     }  
（3）快速排序
    （1）在数据集之中，选择一个元素作为"基准"（pivot）。
　　（2）所有小于"基准"的元素，都移到"基准"的左边；所有大于"基准"的元素，都移到"基准"的右边。
　　（3）对"基准"左边和右边的两个子集，不断重复第一步和第二步，直到所有子集只剩下一个元素为止。

    var quickSort = function(arr) {
　　  if (arr.length <= 1) { return arr; }
　　  var pivotIndex = Math.floor(arr.length / 2);//向下取整，定位到偏向于中间的点。
　　  var pivot = arr.splice(pivotIndex, 1)[0];//将这个值从数组中取出，splice()会将空填好。
　　  var left = [];
　　  var right = [];
　　  for (var i = 0; i < arr.length; i++){
　　　　    if (arr[i] < pivot) {              //将小于基准点的放入左数组
　　　　　　  left.push(arr[i]);
　　　　    } else {
　　　　　   　right.push(arr[i]);             //将大于基准点的放入右数组
　　　　    }
　　   }
　　  return quickSort(left).concat([pivot], quickSort(right)); //递归调用，并用concat将left，pivot，right连在一起。
    };
  
